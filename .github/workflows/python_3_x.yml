name: Python 3.x


on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.bash.outputs.VERSION }}
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4.2.0
      with:
        python-version: 3.8
    - name: Instal Python Package
      run: pip3 install requests sh
    - name: run python script
      shell: python
      run: |
        import requests
        import json
        import os
        from sh import echo
        #To find the repo name - ${{ github.event.repository.name }}
        api='${{ github.api_url }}/users/${{ github.actor }}/packages/container/springboot-reactive/versions'
        r=requests.get(api, auth=('${{ github.repository_owner }}','${{ secrets.GITHUB_TOKEN }}'))
        env_file = os.getenv('GITHUB_ENV')
        if(r.status_code == 200):
            v = json.loads(r.text)
            latest_v=v[0]['metadata']['container']['tags'][0]
            # debug
            print(latest_v)
            
            # write to an environment file
            with open(env_file, "a") as myfile:
              myfile.write(f"VERSION={latest_v}")
        else:
            print('Something went wrong')
        
    - name: Print version
      id: bash
      shell: bash
      run: |
        echo $VERSION
        echo "::set-output name=VERSION::$VERSION"
        printenv
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      run: |
        echo "Deploy Version L_VERSION: ${{ needs.build.outputs.VERSION }}"
